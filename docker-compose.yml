version: '3.9'

services:
  postgres:
    image: postgres:latest
    restart: always
    container_name: web_shop
    volumes:
      - ./storage/src/main/resources/sql/create.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - 5433:5432

  postgres2:
    image: postgres:latest
    restart: always
    container_name: payments
    volumes:
      - ./payment/src/main/resources/sql/create.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - 5434:5432

  postgres3:
    image: postgres:latest
    restart: always
    container_name: clients
    volumes:
      - ./client/src/main/resources/sql/create.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - 5435:5432

  keycloak:
    image: "quay.io/keycloak/keycloak:23.0.6"
    container_name: keycloak_serv
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
    ports:
      - "18080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm

  grafana:
    image: grafana/grafana:latest
    user: root
    ports:
      - 3000:3000
    volumes:
      - ./.config/grafana-configs:/var/lib/grafana
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./.config/prometheus-configs:/etc/prometheus/
      - ./.config/prometheus-data:/prometheus
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - default

  node-exporter:
      image: prom/node-exporter
      volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
      container_name: exporter
      hostname: exporter
      command:
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --collector.filesystem.ignored-mount-points
        - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
      ports:
        - 9100:9100
      restart: unless-stopped
      networks:
        - default

networks:
  default:
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.23.0.0/16
